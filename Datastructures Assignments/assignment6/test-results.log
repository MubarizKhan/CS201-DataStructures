========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py FFFFFFFFFFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
___________________________________________________________________________ test_s_person_1 ___________________________________________________________________________

    def test_s_person_1():
>       director = Person("Director")
E       TypeError: Person() takes no arguments

test_student.py:60: TypeError
__________________________________________________________________________ test_s_find_val_1 __________________________________________________________________________

    def test_s_find_val_1():
>       t_d = get_hier()

test_student.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def get_hier():
>       director = Person("Director")
E       TypeError: Person() takes no arguments

test_student.py:19: TypeError
__________________________________________________________________________ test_s_find_val_2 __________________________________________________________________________

    def test_s_find_val_2():
>       t_d = get_hier()

test_student.py:72: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def get_hier():
>       director = Person("Director")
E       TypeError: Person() takes no arguments

test_student.py:19: TypeError
__________________________________________________________________________ test_s_find_val_3 __________________________________________________________________________

    def test_s_find_val_3():
>       t_d = get_hier_2()

test_student.py:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def get_hier_2():
>       director = Person("Rector")
E       TypeError: Person() takes no arguments

test_student.py:39: TypeError
__________________________________________________________________________ test_s_find_val_4 __________________________________________________________________________

    def test_s_find_val_4():
>       t_d = get_hier_2()

test_student.py:84: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def get_hier_2():
>       director = Person("Rector")
E       TypeError: Person() takes no arguments

test_student.py:39: TypeError
__________________________________________________________________________ test_s_find_val_5 __________________________________________________________________________

    def test_s_find_val_5():
>       t_d = get_hier_2()

test_student.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def get_hier_2():
>       director = Person("Rector")
E       TypeError: Person() takes no arguments

test_student.py:39: TypeError
_________________________________________________________________________ test_s_collector_1 __________________________________________________________________________

    def test_s_collector_1():
>       t_d = get_hier()

test_student.py:104: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def get_hier():
>       director = Person("Director")
E       TypeError: Person() takes no arguments

test_student.py:19: TypeError
_________________________________________________________________________ test_s_collector_2 __________________________________________________________________________

    def test_s_collector_2():
>       t_d = get_hier()

test_student.py:110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def get_hier():
>       director = Person("Director")
E       TypeError: Person() takes no arguments

test_student.py:19: TypeError
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
>       t_d = get_hier()

test_student.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def get_hier():
>       director = Person("Director")
E       TypeError: Person() takes no arguments

test_student.py:19: TypeError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
>       t_d = get_hier()

test_student.py:123: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def get_hier():
>       director = Person("Director")
E       TypeError: Person() takes no arguments

test_student.py:19: TypeError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
>       t_d = get_hier()

test_student.py:129: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def get_hier():
>       director = Person("Director")
E       TypeError: Person() takes no arguments

test_student.py:19: TypeError
====================================================================== 11 failed in 0.58 seconds ======================================================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py .F..FFFFFFF                                                                                      [100%]

====================================================== FAILURES =======================================================
__________________________________________________ test_s_find_val_1 __________________________________________________

    def test_s_find_val_1():
        t_d = get_hier()
        node = t_d.find_val('Director')
>       assert str(node.val) == 'Director'
E       AttributeError: 'NoneType' object has no attribute 'val'

test_student.py:69: AttributeError
__________________________________________________ test_s_find_val_4 __________________________________________________

    def test_s_find_val_4():
        t_d = get_hier_2()
        node = t_d.find_val('Account 1')
>       assert str(node.val) == 'Account 1'
E       AttributeError: 'NoneType' object has no attribute 'val'

test_student.py:86: AttributeError
__________________________________________________ test_s_find_val_5 __________________________________________________

    def test_s_find_val_5():
        t_d = get_hier_2()
        node = t_d.find_val('Account 2')
>       assert str(node.val) == 'Account 2'
E       AttributeError: 'NoneType' object has no attribute 'val'

test_student.py:92: AttributeError
_________________________________________________ test_s_collector_1 __________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
>       t_d.left.dfs_apply(c.process)
E       AttributeError: 'Collector' object has no attribute 'process'

test_student.py:106: AttributeError
_________________________________________________ test_s_collector_2 __________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
>       t_d.left.left.dfs_apply(c.process)
E       AttributeError: 'Collector' object has no attribute 'process'

test_student.py:112: AttributeError
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
========================================= 8 failed, 3 passed in 0.19 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py .F..FFFFFFF                                                                                      [100%]

====================================================== FAILURES =======================================================
__________________________________________________ test_s_find_val_1 __________________________________________________

    def test_s_find_val_1():
        t_d = get_hier()
        node = t_d.find_val('Director')
>       assert str(node.val) == 'Director'
E       AttributeError: 'NoneType' object has no attribute 'val'

test_student.py:69: AttributeError
__________________________________________________ test_s_find_val_4 __________________________________________________

    def test_s_find_val_4():
        t_d = get_hier_2()
        node = t_d.find_val('Account 1')
>       assert str(node.val) == 'Account 1'
E       AttributeError: 'NoneType' object has no attribute 'val'

test_student.py:86: AttributeError
__________________________________________________ test_s_find_val_5 __________________________________________________

    def test_s_find_val_5():
        t_d = get_hier_2()
        node = t_d.find_val('Account 2')
>       assert str(node.val) == 'Account 2'
E       AttributeError: 'NoneType' object has no attribute 'val'

test_student.py:92: AttributeError
_________________________________________________ test_s_collector_1 __________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
>       t_d.left.dfs_apply(c.process)
E       AttributeError: 'Collector' object has no attribute 'process'

test_student.py:106: AttributeError
_________________________________________________ test_s_collector_2 __________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
>       t_d.left.left.dfs_apply(c.process)
E       AttributeError: 'Collector' object has no attribute 'process'

test_student.py:112: AttributeError
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
========================================= 8 failed, 3 passed in 0.19 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py .F..FFFFFFF                                                                                      [100%]

====================================================== FAILURES =======================================================
__________________________________________________ test_s_find_val_1 __________________________________________________

    def test_s_find_val_1():
        t_d = get_hier()
        node = t_d.find_val('Director')
>       assert str(node.val) == 'Director'
E       AttributeError: 'NoneType' object has no attribute 'val'

test_student.py:69: AttributeError
__________________________________________________ test_s_find_val_4 __________________________________________________

    def test_s_find_val_4():
        t_d = get_hier_2()
        node = t_d.find_val('Account 1')
>       assert str(node.val) == 'Account 1'
E       AttributeError: 'NoneType' object has no attribute 'val'

test_student.py:86: AttributeError
__________________________________________________ test_s_find_val_5 __________________________________________________

    def test_s_find_val_5():
        t_d = get_hier_2()
        node = t_d.find_val('Account 2')
>       assert str(node.val) == 'Account 2'
E       AttributeError: 'NoneType' object has no attribute 'val'

test_student.py:92: AttributeError
_________________________________________________ test_s_collector_1 __________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
>       t_d.left.dfs_apply(c.process)
E       AttributeError: 'Collector' object has no attribute 'process'

test_student.py:106: AttributeError
_________________________________________________ test_s_collector_2 __________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
>       t_d.left.left.dfs_apply(c.process)
E       AttributeError: 'Collector' object has no attribute 'process'

test_student.py:112: AttributeError
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
========================================= 8 failed, 3 passed in 0.18 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py .F..FFFFFFF                                                                                      [100%]

====================================================== FAILURES =======================================================
__________________________________________________ test_s_find_val_1 __________________________________________________

    def test_s_find_val_1():
        t_d = get_hier()
        node = t_d.find_val('Director')
>       assert str(node.val) == 'Director'
E       AttributeError: 'NoneType' object has no attribute 'val'

test_student.py:69: AttributeError
__________________________________________________ test_s_find_val_4 __________________________________________________

    def test_s_find_val_4():
        t_d = get_hier_2()
        node = t_d.find_val('Account 1')
>       assert str(node.val) == 'Account 1'
E       AttributeError: 'NoneType' object has no attribute 'val'

test_student.py:86: AttributeError
__________________________________________________ test_s_find_val_5 __________________________________________________

    def test_s_find_val_5():
        t_d = get_hier_2()
        node = t_d.find_val('Account 2')
>       assert str(node.val) == 'Account 2'
E       AttributeError: 'NoneType' object has no attribute 'val'

test_student.py:92: AttributeError
_________________________________________________ test_s_collector_1 __________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
>       t_d.left.dfs_apply(c.process)
E       AttributeError: 'Collector' object has no attribute 'process'

test_student.py:106: AttributeError
_________________________________________________ test_s_collector_2 __________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
>       t_d.left.left.dfs_apply(c.process)
E       AttributeError: 'Collector' object has no attribute 'process'

test_student.py:112: AttributeError
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
========================================= 8 failed, 3 passed in 0.18 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py .F..FFFFFFF                                                                                      [100%]

====================================================== FAILURES =======================================================
__________________________________________________ test_s_find_val_1 __________________________________________________

    def test_s_find_val_1():
        t_d = get_hier()
        node = t_d.find_val('Director')
>       assert str(node.val) == 'Director'
E       AttributeError: 'NoneType' object has no attribute 'val'

test_student.py:69: AttributeError
__________________________________________________ test_s_find_val_4 __________________________________________________

    def test_s_find_val_4():
        t_d = get_hier_2()
        node = t_d.find_val('Account 1')
>       assert str(node.val) == 'Account 1'
E       AttributeError: 'NoneType' object has no attribute 'val'

test_student.py:86: AttributeError
__________________________________________________ test_s_find_val_5 __________________________________________________

    def test_s_find_val_5():
        t_d = get_hier_2()
        node = t_d.find_val('Account 2')
>       assert str(node.val) == 'Account 2'
E       AttributeError: 'NoneType' object has no attribute 'val'

test_student.py:92: AttributeError
_________________________________________________ test_s_collector_1 __________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
>       t_d.left.dfs_apply(c.process)
E       AttributeError: 'Collector' object has no attribute 'process'

test_student.py:106: AttributeError
_________________________________________________ test_s_collector_2 __________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
>       t_d.left.left.dfs_apply(c.process)
E       AttributeError: 'Collector' object has no attribute 'process'

test_student.py:112: AttributeError
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
========================================= 8 failed, 3 passed in 0.16 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ..FFFFFFFFF                                                                                      [100%]

====================================================== FAILURES =======================================================
__________________________________________________ test_s_find_val_2 __________________________________________________

    def test_s_find_val_2():
        t_d = get_hier()
>       node = t_d.find_val('HoD 3')

test_student.py:73: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:98: in find_val
    constraints = { val != self.val.name , val != self.left.find_val(self.val.name) , val != self.right.find_val(self.val.name) }
a06.py:98: in find_val
    constraints = { val != self.val.name , val != self.left.find_val(self.val.name) , val != self.right.find_val(self.val.name) }
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002111C163A90>, val = 'HoD 1'

    def find_val(self, val):
        if self.val.name == val:
            return self
    
>       constraints = { val != self.val.name , val != self.left.find_val(self.val.name) , val != self.right.find_val(self.val.name) }
E       AttributeError: 'NoneType' object has no attribute 'find_val'

a06.py:98: AttributeError
__________________________________________________ test_s_find_val_3 __________________________________________________

    def test_s_find_val_3():
        t_d = get_hier_2()
>       node = t_d.find_val('Director')

test_student.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:98: in find_val
    constraints = { val != self.val.name , val != self.left.find_val(self.val.name) , val != self.right.find_val(self.val.name) }
a06.py:98: in find_val
    constraints = { val != self.val.name , val != self.left.find_val(self.val.name) , val != self.right.find_val(self.val.name) }
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002111C1F8668>, val = 'Registrar'

    def find_val(self, val):
        if self.val.name == val:
            return self
    
>       constraints = { val != self.val.name , val != self.left.find_val(self.val.name) , val != self.right.find_val(self.val.name) }
E       AttributeError: 'NoneType' object has no attribute 'find_val'

a06.py:98: AttributeError
__________________________________________________ test_s_find_val_4 __________________________________________________

    def test_s_find_val_4():
        t_d = get_hier_2()
>       node = t_d.find_val('Account 1')

test_student.py:85: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:98: in find_val
    constraints = { val != self.val.name , val != self.left.find_val(self.val.name) , val != self.right.find_val(self.val.name) }
a06.py:98: in find_val
    constraints = { val != self.val.name , val != self.left.find_val(self.val.name) , val != self.right.find_val(self.val.name) }
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002111C2186D8>, val = 'Registrar'

    def find_val(self, val):
        if self.val.name == val:
            return self
    
>       constraints = { val != self.val.name , val != self.left.find_val(self.val.name) , val != self.right.find_val(self.val.name) }
E       AttributeError: 'NoneType' object has no attribute 'find_val'

a06.py:98: AttributeError
__________________________________________________ test_s_find_val_5 __________________________________________________

    def test_s_find_val_5():
        t_d = get_hier_2()
>       node = t_d.find_val('Account 2')

test_student.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:98: in find_val
    constraints = { val != self.val.name , val != self.left.find_val(self.val.name) , val != self.right.find_val(self.val.name) }
a06.py:98: in find_val
    constraints = { val != self.val.name , val != self.left.find_val(self.val.name) , val != self.right.find_val(self.val.name) }
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002111C22C240>, val = 'Registrar'

    def find_val(self, val):
        if self.val.name == val:
            return self
    
>       constraints = { val != self.val.name , val != self.left.find_val(self.val.name) , val != self.right.find_val(self.val.name) }
E       AttributeError: 'NoneType' object has no attribute 'find_val'

a06.py:98: AttributeError
_________________________________________________ test_s_collector_1 __________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
>       t_d.left.dfs_apply(c.process)
E       AttributeError: 'Collector' object has no attribute 'process'

test_student.py:106: AttributeError
_________________________________________________ test_s_collector_2 __________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
>       t_d.left.left.dfs_apply(c.process)
E       AttributeError: 'Collector' object has no attribute 'process'

test_student.py:112: AttributeError
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
========================================= 9 failed, 2 passed in 0.32 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ......FFFFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_collector_1 __________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
>       t_d.left.dfs_apply(c.process)
E       AttributeError: 'Collector' object has no attribute 'process'

test_student.py:106: AttributeError
_________________________________________________ test_s_collector_2 __________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
>       t_d.left.left.dfs_apply(c.process)
E       AttributeError: 'Collector' object has no attribute 'process'

test_student.py:112: AttributeError
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
========================================= 5 failed, 6 passed in 0.24 seconds ==========================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ......FFFFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_collector_1 __________________________________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
>       t_d.left.dfs_apply(c.process)

test_student.py:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:53: in dfs_apply
    fn(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.Collector object at 0x0000020B84BBF4E0>, node = <a06.TreeNode object at 0x0000020B84BBF390>

    def process(self, node):
>       list.append(node.val)
E       TypeError: descriptor 'append' requires a 'list' object but received a 'Person'

a06.py:75: TypeError
_________________________________________________________________________ test_s_collector_2 __________________________________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
>       t_d.left.left.dfs_apply(c.process)

test_student.py:112: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:53: in dfs_apply
    fn(self)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.Collector object at 0x0000020B84C1D828>, node = <a06.TreeNode object at 0x0000020B84C1D2E8>

    def process(self, node):
>       list.append(node.val)
E       TypeError: descriptor 'append' requires a 'list' object but received a 'Person'

a06.py:75: TypeError
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 5 failed, 6 passed in 0.25 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ......FFFFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_collector_1 __________________________________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
>       t_d.left.dfs_apply(c.process)

test_student.py:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002AC5038E240>, fn = <bound method Collector.process of <a06.Collector object at 0x000002AC5038E390>>

    def dfs_apply(self, fn):
>       fn(self)
E       TypeError: process() takes 1 positional argument but 2 were given

a06.py:53: TypeError
_________________________________________________________________________ test_s_collector_2 __________________________________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
>       t_d.left.left.dfs_apply(c.process)

test_student.py:112: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002AC503FC7B8>, fn = <bound method Collector.process of <a06.Collector object at 0x000002AC503FC898>>

    def dfs_apply(self, fn):
>       fn(self)
E       TypeError: process() takes 1 positional argument but 2 were given

a06.py:53: TypeError
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 5 failed, 6 passed in 0.24 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 0 items / 1 errors

=============================================================================== ERRORS ================================================================================
__________________________________________________________________ ERROR collecting test_student.py ___________________________________________________________________
C:\Users\Owner\Anaconda3\lib\site-packages\_pytest\python.py:499: in _importtestmodule
    mod = self.fspath.pyimport(ensuresyspath=importmode)
C:\Users\Owner\Anaconda3\lib\site-packages\py\_path\local.py:701: in pyimport
    __import__(modname)
<frozen importlib._bootstrap>:983: in _find_and_load
    ???
<frozen importlib._bootstrap>:967: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:668: in _load_unlocked
    ???
<frozen importlib._bootstrap>:638: in _load_backward_compatible
    ???
C:\Users\Owner\Anaconda3\lib\site-packages\_pytest\assertion\rewrite.py:296: in load_module
    six.exec_(co, mod.__dict__)
test_student.py:2: in <module>
    from a06 import TreeNode
E     File "E:\Current Semester\Datastructures\Datastructures Assignments\assignment6\a06.py", line 79
E       if self.left:
E       ^
E   IndentationError: unexpected indent
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
======================================================================= 1 error in 0.41 seconds =======================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 0 items / 1 errors

=============================================================================== ERRORS ================================================================================
__________________________________________________________________ ERROR collecting test_student.py ___________________________________________________________________
C:\Users\Owner\Anaconda3\lib\site-packages\_pytest\python.py:499: in _importtestmodule
    mod = self.fspath.pyimport(ensuresyspath=importmode)
C:\Users\Owner\Anaconda3\lib\site-packages\py\_path\local.py:701: in pyimport
    __import__(modname)
<frozen importlib._bootstrap>:983: in _find_and_load
    ???
<frozen importlib._bootstrap>:967: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:668: in _load_unlocked
    ???
<frozen importlib._bootstrap>:638: in _load_backward_compatible
    ???
C:\Users\Owner\Anaconda3\lib\site-packages\_pytest\assertion\rewrite.py:296: in load_module
    six.exec_(co, mod.__dict__)
test_student.py:2: in <module>
    from a06 import TreeNode
E     File "E:\Current Semester\Datastructures\Datastructures Assignments\assignment6\a06.py", line 85
E       self.dfs_apply(process)
E       ^
E   IndentationError: unexpected indent
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
======================================================================= 1 error in 0.36 seconds =======================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ......FFFFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_collector_1 __________________________________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
>       t_d.left.dfs_apply(c.process)

test_student.py:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001C10E12D208>, fn = <bound method Collector.process of <a06.Collector object at 0x000001C10E12D358>>

    def dfs_apply(self, fn):
>       fn(self)
E       TypeError: process() takes 1 positional argument but 2 were given

a06.py:53: TypeError
_________________________________________________________________________ test_s_collector_2 __________________________________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
>       t_d.left.left.dfs_apply(c.process)

test_student.py:112: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001C10E181780>, fn = <bound method Collector.process of <a06.Collector object at 0x000001C10E1816D8>>

    def dfs_apply(self, fn):
>       fn(self)
E       TypeError: process() takes 1 positional argument but 2 were given

a06.py:53: TypeError
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 5 failed, 6 passed in 0.25 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ......FFFFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_collector_1 __________________________________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
>       t_d.left.dfs_apply(c.process)

test_student.py:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001714B40E0F0>, fn = <bound method Collector.process of <a06.Collector object at 0x000001714B40E240>>

    def dfs_apply(self, fn):
>       fn(self)
E       TypeError: process() takes 1 positional argument but 2 were given

a06.py:53: TypeError
_________________________________________________________________________ test_s_collector_2 __________________________________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
>       t_d.left.left.dfs_apply(c.process)

test_student.py:112: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001714B449630>, fn = <bound method Collector.process of <a06.Collector object at 0x000001714B449668>>

    def dfs_apply(self, fn):
>       fn(self)
E       TypeError: process() takes 1 positional argument but 2 were given

a06.py:53: TypeError
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 5 failed, 6 passed in 0.25 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ......FFFFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_collector_1 __________________________________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
>       t_d.left.dfs_apply(c.process)

test_student.py:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002678D94F1D0>, fn = <bound method Collector.process of <a06.Collector object at 0x000002678D94F320>>

    def dfs_apply(self, fn):
>       fn(self)
E       TypeError: process() takes 1 positional argument but 2 were given

a06.py:53: TypeError
_________________________________________________________________________ test_s_collector_2 __________________________________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
>       t_d.left.left.dfs_apply(c.process)

test_student.py:112: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002678D9A2710>, fn = <bound method Collector.process of <a06.Collector object at 0x000002678D9A2668>>

    def dfs_apply(self, fn):
>       fn(self)
E       TypeError: process() takes 1 positional argument but 2 were given

a06.py:53: TypeError
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 5 failed, 6 passed in 0.24 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ......FFFFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_collector_1 __________________________________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
>       t_d.left.dfs_apply(c.process)

test_student.py:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001EFFDDEF198>, fn = <bound method Collector.process of <a06.Collector object at 0x000001EFFDDEF2E8>>

    def dfs_apply(self, fn):
>       fn(self)
E       TypeError: process() takes 1 positional argument but 2 were given

a06.py:53: TypeError
_________________________________________________________________________ test_s_collector_2 __________________________________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
>       t_d.left.left.dfs_apply(c.process)

test_student.py:112: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001EFFDE295C0>, fn = <bound method Collector.process of <a06.Collector object at 0x000001EFFDE29710>>

    def dfs_apply(self, fn):
>       fn(self)
E       TypeError: process() takes 1 positional argument but 2 were given

a06.py:53: TypeError
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 5 failed, 6 passed in 0.24 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ......FFFFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_collector_1 __________________________________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
>       t_d.left.dfs_apply(c.process)

test_student.py:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000014FBA1A1240>, fn = <bound method Collector.process of <a06.Collector object at 0x0000014FBA1A1390>>

    def dfs_apply(self, fn):
>       fn(self)
E       TypeError: process() takes 1 positional argument but 2 were given

a06.py:53: TypeError
_________________________________________________________________________ test_s_collector_2 __________________________________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
>       t_d.left.left.dfs_apply(c.process)

test_student.py:112: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000014FBA1F1780>, fn = <bound method Collector.process of <a06.Collector object at 0x0000014FBA1F1860>>

    def dfs_apply(self, fn):
>       fn(self)
E       TypeError: process() takes 1 positional argument but 2 were given

a06.py:53: TypeError
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 5 failed, 6 passed in 0.24 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ......FFFFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_collector_1 __________________________________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
        t_d.left.dfs_apply(c.process)
>       assert c.get_list()  == ['HoD 1', 'CS 1', 'CS 2']
E       AssertionError: assert <class 'list'> == ['HoD 1', 'CS 1', 'CS 2']
E        +  where <class 'list'> = <bound method Collector.get_list of <a06.Collector object at 0x00000228F11D04A8>>()
E        +    where <bound method Collector.get_list of <a06.Collector object at 0x00000228F11D04A8>> = <a06.Collector object at 0x00000228F11D04A8>.get_list

test_student.py:107: AssertionError
_________________________________________________________________________ test_s_collector_2 __________________________________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
        t_d.left.left.dfs_apply(c.process)
>       assert c.get_list()  == ['CS 1']
E       AssertionError: assert <class 'list'> == ['CS 1']
E        +  where <class 'list'> = <bound method Collector.get_list of <a06.Collector object at 0x00000228F120D780>>()
E        +    where <bound method Collector.get_list of <a06.Collector object at 0x00000228F120D780>> = <a06.Collector object at 0x00000228F120D780>.get_list

test_student.py:113: AssertionError
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 5 failed, 6 passed in 0.22 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ......FFFFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_collector_1 __________________________________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
        t_d.left.dfs_apply(c.process)
>       assert c.get_list()  == ['HoD 1', 'CS 1', 'CS 2']
E       AssertionError: assert <class 'list'> == ['HoD 1', 'CS 1', 'CS 2']
E        +  where <class 'list'> = <bound method Collector.get_list of <a06.Collector object at 0x000001DB35ABF358>>()
E        +    where <bound method Collector.get_list of <a06.Collector object at 0x000001DB35ABF358>> = <a06.Collector object at 0x000001DB35ABF358>.get_list

test_student.py:107: AssertionError
_________________________________________________________________________ test_s_collector_2 __________________________________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
        t_d.left.left.dfs_apply(c.process)
>       assert c.get_list()  == ['CS 1']
E       AssertionError: assert <class 'list'> == ['CS 1']
E        +  where <class 'list'> = <bound method Collector.get_list of <a06.Collector object at 0x000001DB35B006A0>>()
E        +    where <bound method Collector.get_list of <a06.Collector object at 0x000001DB35B006A0>> = <a06.Collector object at 0x000001DB35B006A0>.get_list

test_student.py:113: AssertionError
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 5 failed, 6 passed in 0.22 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ......FFFFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_collector_1 __________________________________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
        t_d.left.dfs_apply(c.process)
>       assert c.get_list()  == ['HoD 1', 'CS 1', 'CS 2']
E       AssertionError: assert [<a06.Person ...0275BD8DE278>] == ['HoD 1', 'CS 1', 'CS 2']
E         At index 0 diff: <a06.Person object at 0x00000275BD8DE1D0> != 'HoD 1'
E         Use -v to get the full diff

test_student.py:107: AssertionError
_________________________________________________________________________ test_s_collector_2 __________________________________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
        t_d.left.left.dfs_apply(c.process)
>       assert c.get_list()  == ['CS 1']
E       AssertionError: assert [<a06.Person ...0275BD91C518>] == ['CS 1']
E         At index 0 diff: <a06.Person object at 0x00000275BD91C518> != 'CS 1'
E         Use -v to get the full diff

test_student.py:113: AssertionError
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 5 failed, 6 passed in 0.24 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ......FFFFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_collector_1 __________________________________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
        t_d.left.dfs_apply(c.process)
>       assert c.get_list()  == ['HoD 1', 'CS 1', 'CS 2']
E       AssertionError: assert '[HoD 1,CS 1,CS 2]' == ['HoD 1', 'CS 1', 'CS 2']
E        +  where '[HoD 1,CS 1,CS 2]' = <bound method Collector.get_list of <a06.Collector object at 0x0000023232D4D438>>()
E        +    where <bound method Collector.get_list of <a06.Collector object at 0x0000023232D4D438>> = <a06.Collector object at 0x0000023232D4D438>.get_list

test_student.py:107: AssertionError
_________________________________________________________________________ test_s_collector_2 __________________________________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
        t_d.left.left.dfs_apply(c.process)
>       assert c.get_list()  == ['CS 1']
E       AssertionError: assert '[CS 1]' == ['CS 1']
E        +  where '[CS 1]' = <bound method Collector.get_list of <a06.Collector object at 0x0000023232D8A710>>()
E        +    where <bound method Collector.get_list of <a06.Collector object at 0x0000023232D8A710>> = <a06.Collector object at 0x0000023232D8A710>.get_list

test_student.py:113: AssertionError
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 5 failed, 6 passed in 0.23 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ......FFFFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_collector_1 __________________________________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
        t_d.left.dfs_apply(c.process)
>       assert c.get_list()  == ['HoD 1', 'CS 1', 'CS 2']
E       AssertionError: assert '[HoD 1 ,CS 1 ,CS 2 ]' == ['HoD 1', 'CS 1', 'CS 2']
E        +  where '[HoD 1 ,CS 1 ,CS 2 ]' = <bound method Collector.get_list of <a06.Collector object at 0x0000013CA64EC358>>()
E        +    where <bound method Collector.get_list of <a06.Collector object at 0x0000013CA64EC358>> = <a06.Collector object at 0x0000013CA64EC358>.get_list

test_student.py:107: AssertionError
_________________________________________________________________________ test_s_collector_2 __________________________________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
        t_d.left.left.dfs_apply(c.process)
>       assert c.get_list()  == ['CS 1']
E       AssertionError: assert '[CS 1 ]' == ['CS 1']
E        +  where '[CS 1 ]' = <bound method Collector.get_list of <a06.Collector object at 0x0000013CA652A668>>()
E        +    where <bound method Collector.get_list of <a06.Collector object at 0x0000013CA652A668>> = <a06.Collector object at 0x0000013CA652A668>.get_list

test_student.py:113: AssertionError
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 5 failed, 6 passed in 0.24 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ......FFFFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_collector_1 __________________________________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
        t_d.left.dfs_apply(c.process)
>       assert c.get_list()  == ['HoD 1', 'CS 1', 'CS 2']
E       assert "['HoD 1', 'CS 1', 'CS 2']" == ['HoD 1', 'CS 1', 'CS 2']
E        +  where "['HoD 1', 'CS 1', 'CS 2']" = <bound method Collector.get_list of <a06.Collector object at 0x000002B2BC2D2518>>()
E        +    where <bound method Collector.get_list of <a06.Collector object at 0x000002B2BC2D2518>> = <a06.Collector object at 0x000002B2BC2D2518>.get_list

test_student.py:107: AssertionError
_________________________________________________________________________ test_s_collector_2 __________________________________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
        t_d.left.left.dfs_apply(c.process)
>       assert c.get_list()  == ['CS 1']
E       assert "['CS 1']" == ['CS 1']
E        +  where "['CS 1']" = <bound method Collector.get_list of <a06.Collector object at 0x000002B2BC30A7B8>>()
E        +    where <bound method Collector.get_list of <a06.Collector object at 0x000002B2BC30A7B8>> = <a06.Collector object at 0x000002B2BC30A7B8>.get_list

test_student.py:113: AssertionError
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 5 failed, 6 passed in 0.26 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ......FFFFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_collector_1 __________________________________________________________________________

    def test_s_collector_1():
        t_d = get_hier()
        c = Collector()
        t_d.left.dfs_apply(c.process)
>       assert c.get_list()  == ['HoD 1', 'CS 1', 'CS 2']
E       AssertionError: assert [<a06.Person ...01F00D01D0B8>] == ['HoD 1', 'CS 1', 'CS 2']
E         At index 0 diff: <a06.Person object at 0x000001F00D00D5F8> != 'HoD 1'
E         Use -v to get the full diff

test_student.py:107: AssertionError
_________________________________________________________________________ test_s_collector_2 __________________________________________________________________________

    def test_s_collector_2():
        t_d = get_hier()
        c = Collector()
        t_d.left.left.dfs_apply(c.process)
>       assert c.get_list()  == ['CS 1']
E       AssertionError: assert [<a06.Person ...01F00D05B438>] == ['CS 1']
E         At index 0 diff: <a06.Person object at 0x000001F00D05B438> != 'CS 1'
E         Use -v to get the full diff

test_student.py:113: AssertionError
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 5 failed, 6 passed in 0.23 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 3 failed, 8 passed in 0.21 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 3 failed, 8 passed in 0.17 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
Director
HoD 1
HoD 2
CS 1
CS 2
EE 1
EE 2
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 3 failed, 8 passed in 0.19 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
Director
HoD 1
HoD 2
CS 1
CS 2
EE 1
EE 2
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 3 failed, 8 passed in 0.17 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('Director')

test_student.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002078C5BF5F8>, name = 'Director'

    def find_people_in_hierarchy(self, name):
        if self.val.name == name:
>           self.tds_apply(self.process)
E           AttributeError: 'TreeNode' object has no attribute 'tds_apply'

a06.py:115: AttributeError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
HoD 1
CS 1
CS 2
HoD 2
EE 1
EE 2
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
HoD 1
CS 1
CS 2
HoD 2
EE 1
EE 2
================================================================= 3 failed, 8 passed in 0.20 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('Director')

test_student.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001FACB60E630>, name = 'Director'

    def find_people_in_hierarchy(self, name):
        if self.val.name == name:
>           self.tds_apply(self.process)
E           AttributeError: 'TreeNode' object has no attribute 'tds_apply'

a06.py:115: AttributeError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
HoD 1
CS 1
CS 2
HoD 2
EE 1
EE 2
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
HoD 1
CS 1
CS 2
HoD 2
EE 1
EE 2
================================================================= 3 failed, 8 passed in 0.17 seconds ==================================================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('Director')

test_student.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001A04B30E518>, name = 'Director'

    def find_people_in_hierarchy(self, name):
        if self.val.name == name:
>           self.tds_apply(self.process)
E           AttributeError: 'TreeNode' object has no attribute 'tds_apply'

a06.py:115: AttributeError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
------------------------------------------------ Captured stdout call -------------------------------------------------
HoD 1
CS 1
CS 2
HoD 2
EE 1
EE 2
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
------------------------------------------------ Captured stdout call -------------------------------------------------
HoD 1
CS 1
CS 2
HoD 2
EE 1
EE 2
========================================= 3 failed, 8 passed in 0.25 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('Director')

test_student.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002125F16F630>, name = 'Director'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
>           list.append(self.val.name)
E           TypeError: descriptor 'append' requires a 'list' object but received a 'str'

a06.py:118: TypeError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:138: in find_people_in_hierarchy
    self.right.find_people_in_hierarchy(name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002125F1AE6A0>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
>           list.append(self.val.name)
E           TypeError: descriptor 'append' requires a 'list' object but received a 'str'

a06.py:118: TypeError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
========================================= 3 failed, 8 passed in 0.21 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert <a06.Collector object at 0x000001DDBF630860> == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert <a06.Collector object at 0x000001DDBF671630> == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
========================================= 3 failed, 8 passed in 0.23 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert ['Director', ..., 'EE 1', ...] == ['Director', '..., 'EE 1', ...]
E         Left contains more items, first extra item: 'Director'
E         Use -v to get the full diff

test_student.py:119: AssertionError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert [] == ['HoD 2', 'EE 1', 'EE 2']
E         Right contains more items, first extra item: 'HoD 2'
E         Use -v to get the full diff

test_student.py:125: AssertionError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
========================================= 3 failed, 8 passed in 0.36 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 0 items / 1 errors

======================================================= ERRORS ========================================================
__________________________________________ ERROR collecting test_student.py ___________________________________________
C:\Users\Owner\Anaconda3\lib\site-packages\_pytest\python.py:499: in _importtestmodule
    mod = self.fspath.pyimport(ensuresyspath=importmode)
C:\Users\Owner\Anaconda3\lib\site-packages\py\_path\local.py:701: in pyimport
    __import__(modname)
<frozen importlib._bootstrap>:983: in _find_and_load
    ???
<frozen importlib._bootstrap>:967: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:668: in _load_unlocked
    ???
<frozen importlib._bootstrap>:638: in _load_backward_compatible
    ???
C:\Users\Owner\Anaconda3\lib\site-packages\_pytest\assertion\rewrite.py:296: in load_module
    six.exec_(co, mod.__dict__)
test_student.py:2: in <module>
    from a06 import TreeNode
E     File "E:\Current Semester\Datastructures\Datastructures Assignments\assignment6\a06.py", line 134
E       self.left.find_people_in_hierarchy(name)
E          ^
E   IndentationError: expected an indented block
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
=============================================== 1 error in 0.71 seconds ===============================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert ['Director', ..., 'EE 1', ...] == ['Director', '..., 'EE 1', ...]
E         Left contains more items, first extra item: 'Director'
E         Use -v to get the full diff

test_student.py:119: AssertionError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:134: in find_people_in_hierarchy
    self.left.dfs_apply(self.find_people_in_hierarchy)
a06.py:53: in dfs_apply
    fn(self)
a06.py:134: in find_people_in_hierarchy
    self.left.dfs_apply(self.find_people_in_hierarchy)
a06.py:53: in dfs_apply
    fn(self)
E   RecursionError: maximum recursion depth exceeded while calling a Python object
!!! Recursion detected (same locals & position)
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:134: in find_people_in_hierarchy
    self.left.dfs_apply(self.find_people_in_hierarchy)
a06.py:53: in dfs_apply
    fn(self)
a06.py:134: in find_people_in_hierarchy
    self.left.dfs_apply(self.find_people_in_hierarchy)
a06.py:53: in dfs_apply
    fn(self)
E   RecursionError: maximum recursion depth exceeded while calling a Python object
!!! Recursion detected (same locals & position)
========================================= 3 failed, 8 passed in 0.34 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 0 items / 1 errors

======================================================= ERRORS ========================================================
__________________________________________ ERROR collecting test_student.py ___________________________________________
C:\Users\Owner\Anaconda3\lib\site-packages\_pytest\python.py:499: in _importtestmodule
    mod = self.fspath.pyimport(ensuresyspath=importmode)
C:\Users\Owner\Anaconda3\lib\site-packages\py\_path\local.py:701: in pyimport
    __import__(modname)
<frozen importlib._bootstrap>:983: in _find_and_load
    ???
<frozen importlib._bootstrap>:967: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:668: in _load_unlocked
    ???
<frozen importlib._bootstrap>:638: in _load_backward_compatible
    ???
C:\Users\Owner\Anaconda3\lib\site-packages\_pytest\assertion\rewrite.py:296: in load_module
    six.exec_(co, mod.__dict__)
test_student.py:2: in <module>
    from a06 import TreeNode
E     File "E:\Current Semester\Datastructures\Datastructures Assignments\assignment6\a06.py", line 118
E       self.dfs_apply(c.process(self.))
E                                     ^
E   SyntaxError: invalid syntax
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
=============================================== 1 error in 0.33 seconds ===============================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 0 items / 1 errors

======================================================= ERRORS ========================================================
__________________________________________ ERROR collecting test_student.py ___________________________________________
C:\Users\Owner\Anaconda3\lib\site-packages\_pytest\python.py:499: in _importtestmodule
    mod = self.fspath.pyimport(ensuresyspath=importmode)
C:\Users\Owner\Anaconda3\lib\site-packages\py\_path\local.py:701: in pyimport
    __import__(modname)
<frozen importlib._bootstrap>:983: in _find_and_load
    ???
<frozen importlib._bootstrap>:967: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:668: in _load_unlocked
    ???
<frozen importlib._bootstrap>:638: in _load_backward_compatible
    ???
C:\Users\Owner\Anaconda3\lib\site-packages\_pytest\assertion\rewrite.py:296: in load_module
    six.exec_(co, mod.__dict__)
test_student.py:2: in <module>
    from a06 import TreeNode
E     File "E:\Current Semester\Datastructures\Datastructures Assignments\assignment6\a06.py", line 118
E       self.dfs_apply(c.process(self.))
E                                     ^
E   SyntaxError: invalid syntax
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
=============================================== 1 error in 0.43 seconds ===============================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert ['Director', ..., 'EE 1', ...] == ['Director', '..., 'EE 1', ...]
E         Left contains more items, first extra item: 'HoD 2'
E         Use -v to get the full diff

test_student.py:119: AssertionError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert [] == ['HoD 2', 'EE 1', 'EE 2']
E         Right contains more items, first extra item: 'HoD 2'
E         Use -v to get the full diff

test_student.py:125: AssertionError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
========================================= 3 failed, 8 passed in 0.16 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('Director')

test_student.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000019D1CB10588>, name = 'Director'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
    
            # c = Collector()
            if self.left:
                # self.left.list.append(self.val.name)
                if self.left.val.name != name:
>                   raise Exception("<<")
E                   Exception: <<

a06.py:124: Exception
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert [] == ['HoD 2', 'EE 1', 'EE 2']
E         Right contains more items, first extra item: 'HoD 2'
E         Use -v to get the full diff

test_student.py:125: AssertionError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
========================================= 3 failed, 8 passed in 0.14 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('Director')

test_student.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x00000231E854E518>, name = 'Director'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
                if self.left.find_val(name):
                    self.left.dfs_apply(c.process)
                else:
>                   raise Exception("Name not found")
E                   Exception: Name not found

a06.py:127: Exception
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x00000231E858F518>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
                if self.left.find_val(name):
                    self.left.dfs_apply(c.process)
                else:
>                   raise Exception("Name not found")
E                   Exception: Name not found

a06.py:127: Exception
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x00000231E854E358>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
                if self.left.find_val(name):
                    self.left.dfs_apply(c.process)
                else:
>                   raise Exception("Name not found")
E                   Exception: Name not found

a06.py:127: Exception
========================================= 3 failed, 8 passed in 0.17 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('Director')

test_student.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001C4F86EF5C0>, name = 'Director'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
                if self.left.find_val(name):
                    self.left.dfs_apply(c.process)
                else:
>                   raise Exception("Name not found")
E                   Exception: Name not found

a06.py:127: Exception
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001C4F872E668>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
                if self.left.find_val(name):
                    self.left.dfs_apply(c.process)
                else:
>                   raise Exception("Name not found")
E                   Exception: Name not found

a06.py:127: Exception
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001C4F86EF4E0>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
                if self.left.find_val(name):
                    self.left.dfs_apply(c.process)
                else:
>                   raise Exception("Name not found")
E                   Exception: Name not found

a06.py:127: Exception
========================================= 3 failed, 8 passed in 0.16 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('Director')

test_student.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x00000199E4A3F5F8>, name = 'Director'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
>               if self.left.val.find_val(name):
E               AttributeError: 'Person' object has no attribute 'find_val'

a06.py:124: AttributeError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x00000199E4A7E550>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
>               if self.left.val.find_val(name):
E               AttributeError: 'Person' object has no attribute 'find_val'

a06.py:124: AttributeError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x00000199E4A3FFD0>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
>               if self.left.val.find_val(name):
E               AttributeError: 'Person' object has no attribute 'find_val'

a06.py:124: AttributeError
========================================= 3 failed, 8 passed in 0.14 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('Director')

test_student.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001BF4B5ED668>, name = 'Director'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
>               if self.left.val.name.find_val(name):
E               AttributeError: 'str' object has no attribute 'find_val'

a06.py:124: AttributeError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001BF4B62F518>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
>               if self.left.val.name.find_val(name):
E               AttributeError: 'str' object has no attribute 'find_val'

a06.py:124: AttributeError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001BF4B640CC0>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
>               if self.left.val.name.find_val(name):
E               AttributeError: 'str' object has no attribute 'find_val'

a06.py:124: AttributeError
========================================= 3 failed, 8 passed in 0.15 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('Director')

test_student.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001BF8DB51588>, name = 'Director'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
>           self.val.dfs_apply(c.process)
E           AttributeError: 'Person' object has no attribute 'dfs_apply'

a06.py:118: AttributeError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001BF8DB8E630>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.val.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
>               if self.left.val.find_val(name):
E               AttributeError: 'Person' object has no attribute 'find_val'

a06.py:124: AttributeError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001BF8DB51198>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.val.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
>               if self.left.val.find_val(name):
E               AttributeError: 'Person' object has no attribute 'find_val'

a06.py:124: AttributeError
========================================= 3 failed, 8 passed in 0.14 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('Director')

test_student.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001E5A6722710>, name = 'Director'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
>           self.val.dfs_apply(c.process)
E           AttributeError: 'Person' object has no attribute 'dfs_apply'

a06.py:118: AttributeError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001E5A675E630>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.val.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
>               if self.left.val.find_val(name):
E               AttributeError: 'Person' object has no attribute 'find_val'

a06.py:124: AttributeError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001E5A6722CC0>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.val.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
>               if self.left.val.find_val(name):
E               AttributeError: 'Person' object has no attribute 'find_val'

a06.py:124: AttributeError
========================================= 3 failed, 8 passed in 0.17 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('Director')

test_student.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001CEE7EF2320>, name = 'Director'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
>           self.val.dfs_apply(c.process)
E           AttributeError: 'Person' object has no attribute 'dfs_apply'

a06.py:118: AttributeError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001CEE7F2D630>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.val.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
>               if self.left.val.find_val(name):
E               AttributeError: 'Person' object has no attribute 'find_val'

a06.py:124: AttributeError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001CEE7EF2550>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.val.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
>               if self.left.val.find_val(name):
E               AttributeError: 'Person' object has no attribute 'find_val'

a06.py:124: AttributeError
========================================= 3 failed, 8 passed in 0.17 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('Director')

test_student.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x00000166EC8DD550>, name = 'Director'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
>           self.val.dfs_apply(c.process)
E           AttributeError: 'Person' object has no attribute 'dfs_apply'

a06.py:118: AttributeError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:128: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
a06.py:128: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
a06.py:162: in find_people_in_hierarchy
    c.reset_list()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.Collector object at 0x00000166EC91E710>

    def reset_list(self):
>       for i in list.len():
E       AttributeError: type object 'list' has no attribute 'len'

a06.py:86: AttributeError
------------------------------------------------ Captured stdout call -------------------------------------------------
[]
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:128: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
a06.py:128: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
a06.py:162: in find_people_in_hierarchy
    c.reset_list()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.Collector object at 0x00000166EC8DDB70>

    def reset_list(self):
>       for i in list.len():
E       AttributeError: type object 'list' has no attribute 'len'

a06.py:86: AttributeError
------------------------------------------------ Captured stdout call -------------------------------------------------
[]
========================================= 3 failed, 8 passed in 0.30 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('Director')

test_student.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002584855D5F8>, name = 'Director'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
>           self.val.dfs_apply(c.process)
E           AttributeError: 'Person' object has no attribute 'dfs_apply'

a06.py:118: AttributeError
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002584859F4E0>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.val.dfs_apply(c.process)
    
            # c = Collector()
        if self.left:
                # self.left.list.append(self.val.name)
            if self.left.val.name != name:
                # if self.left.val.find_val(name):
    
                # else:
                    # self.left.val.dfs_apply(c.process)
                self.left.find_people_in_hierarchy(name)
                    # raise Exception("Name not found")
            else:
                    # self.left.dfs_apply(c.process)
                # if self.left.find_val(name) == name:
                # self.
    
                self.left.val.dfs_apply(c.process)
                # else:
                # self.left.find_people_in_hierarchy(name)
                    # raise Exception("Name not found")
    
        if self.right:
    
            # if self.right.val.name != name:
            #         # self.right.find_people_in_hierarchy(name)
            #     raise Exception("Name not founf")
            # self.right.dfs_apply(c.process)
    
            if self.right.val.name != name:
                # if self.right.val.find_val(name):
                self.right.find_people_in_hierarchy(name)
                # self.right.val.dfs_apply(c.process)
                # else:
                #     raise Exception("Name not found")
            else:
                    # self.left.dfs_apply(c.process)
                # if self.right.find_val(name) == name:
>               self.right.val.dfs_apply(c.process)
E               AttributeError: 'Person' object has no attribute 'dfs_apply'

a06.py:156: AttributeError
------------------------------------------------ Captured stdout call -------------------------------------------------
[]
[]
[]
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
------------------------------------------------ Captured stdout call -------------------------------------------------
[]
[]
[]
[]
[]
[]
[]
========================================= 3 failed, 8 passed in 0.26 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FF.                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------ Captured stdout call -------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001E7CFF604E0>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return
    
        if self.left:
            if self.left.val.name == name:
                self.left.find_people_in_hierarchy(name)
            else:
>               raise ValueError("Not found")
E               ValueError: Not found

a06.py:126: ValueError
========================================= 2 failed, 9 passed in 0.24 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FF.                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------ Captured stdout call -------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000026E795114E0>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return
    
        if self.left:
            if self.left.val.name == name:
                self.left.find_people_in_hierarchy(name)
            else:
>               raise ValueError("Not found")
E               ValueError: Not found

a06.py:126: ValueError
========================================= 2 failed, 9 passed in 0.28 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------ Captured stdout call -------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:126: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
a06.py:126: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
a06.py:138: in find_people_in_hierarchy
    c.reset_list()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.Collector object at 0x000002520A2116A0>

    def reset_list(self):
>       for i in list.len():
E       AttributeError: type object 'list' has no attribute 'len'

a06.py:86: AttributeError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:126: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
a06.py:126: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
a06.py:138: in find_people_in_hierarchy
    c.reset_list()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.Collector object at 0x000002520A243668>

    def reset_list(self):
>       for i in list.len():
E       AttributeError: type object 'list' has no attribute 'len'

a06.py:86: AttributeError
========================================= 3 failed, 8 passed in 0.35 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------ Captured stdout call -------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:127: in find_people_in_hierarchy
    if self.left.find_people_in_hierarchy(name) == False:
a06.py:127: in find_people_in_hierarchy
    if self.left.find_people_in_hierarchy(name) == False:
a06.py:138: in find_people_in_hierarchy
    c.reset_list()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.Collector object at 0x0000029825EB1828>

    def reset_list(self):
>       for i in list.len():
E       AttributeError: type object 'list' has no attribute 'len'

a06.py:86: AttributeError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:127: in find_people_in_hierarchy
    if self.left.find_people_in_hierarchy(name) == False:
a06.py:127: in find_people_in_hierarchy
    if self.left.find_people_in_hierarchy(name) == False:
a06.py:138: in find_people_in_hierarchy
    c.reset_list()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.Collector object at 0x0000029825EE3518>

    def reset_list(self):
>       for i in list.len():
E       AttributeError: type object 'list' has no attribute 'len'

a06.py:86: AttributeError
========================================= 3 failed, 8 passed in 0.33 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FF.                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------ Captured stdout call -------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x00000269ECD414E0>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return
    
        if self.left:
            if self.left.val.name == name:
                self.left.find_people_in_hierarchy(name)
            else:
                # self.left.find_people_in_hierarchy(name)
                # if self.left.find_people_in_hierarchy(name) == False:
>               raise ValueError("Not found")
E               ValueError: Not found

a06.py:128: ValueError
========================================= 2 failed, 9 passed in 0.33 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------ Captured stdout call -------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:126: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
a06.py:126: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
a06.py:140: in find_people_in_hierarchy
    c.reset_list()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.Collector object at 0x00000216AC131780>

    def reset_list(self):
>       for i in list.len():
E       AttributeError: type object 'list' has no attribute 'len'

a06.py:86: AttributeError
_________________________________________________ test_s_hierarchy_3 __________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:126: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
a06.py:126: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
a06.py:140: in find_people_in_hierarchy
    c.reset_list()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.Collector object at 0x00000216AC0F3F60>

    def reset_list(self):
>       for i in list.len():
E       AttributeError: type object 'list' has no attribute 'len'

a06.py:86: AttributeError
========================================= 3 failed, 8 passed in 0.39 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FF.                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------ Captured stdout call -------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000027684431630>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return
    
        if self.left:
            if self.left.val.name == name:
                self.left.find_people_in_hierarchy(name)
            # elif self.left.val.name != name:
            #     self.left.find_people_in_hierarchy(name)
                # if self.left.find_people_in_hierarchy(name) == False:
            else:
>               raise ValueError("Not found")
E               ValueError: Not found

a06.py:129: ValueError
========================================= 2 failed, 9 passed in 0.44 seconds ==========================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FF.                                                                                      [100%]

====================================================== FAILURES =======================================================
_________________________________________________ test_s_hierarchy_1 __________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------ Captured stdout call -------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________ test_s_hierarchy_2 __________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x00000195681E0400>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return
    
        elif self.left:
            if self.left.val.name == name:
                self.left.find_people_in_hierarchy(name)
            # elif self.left.val.name != name:
            #     self.left.find_people_in_hierarchy(name)
                # if self.left.find_people_in_hierarchy(name) == False:
            else:
>               raise ValueError("Not found")
E               ValueError: Not found

a06.py:129: ValueError
========================================= 2 failed, 9 passed in 0.46 seconds ==========================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FF.                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:124: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
a06.py:124: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002C4107516A0>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return
    
        elif self.left:
            # self.left.val.name == name:
            self.left.find_people_in_hierarchy(name)
            # elif self.left.val.name != name:
            #     self.left.find_people_in_hierarchy(name)
                # if self.left.find_people_in_hierarchy(name) == False:
        # else:
                # raise ValueError("Not found")
    
        # else:
        elif self.right:
                # if self.right.val.name == name:
            self.right.find_people_in_hierarchy(name)
            # elif self.right.val.name != name:
            #     self.right.find_people_in_hierarchy(name)
                # if self.right.find_people_in_hierarchy(name) == False:
                # else:
                    # raise ValueError("NO")
    
        else:
>           raise ValueError("NO")
E           ValueError: NO

a06.py:142: ValueError
================================================================= 2 failed, 9 passed in 0.24 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FF.                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:124: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
a06.py:124: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002B849A30518>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return
    
        elif self.left:
            # self.left.val.name == name:
            self.left.find_people_in_hierarchy(name)
            # elif self.left.val.name != name:
            #     self.left.find_people_in_hierarchy(name)
                # if self.left.find_people_in_hierarchy(name) == False:
        # else:
                # raise ValueError("Not found")
    
        # else:
        elif self.right:
                # if self.right.val.name == name:
            self.right.find_people_in_hierarchy(name)
            # elif self.right.val.name != name:
            #     self.right.find_people_in_hierarchy(name)
                # if self.right.find_people_in_hierarchy(name) == False:
                # else:
                    # raise ValueError("NO")
    
        else:
>           raise ValueError("NO")
E           ValueError: NO

a06.py:142: ValueError
================================================================= 2 failed, 9 passed in 0.17 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FF.                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:124: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001E50A8B0668>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return
    
        elif self.left:
            # self.left.val.name == name:
            self.left.find_people_in_hierarchy(name)
            if self.left.find_people_in_hierarchy(name):
                return self.left.find_people_in_hierarchy(name)
            else:
>               raise ValueError("Value not found")
E               ValueError: Value not found

a06.py:128: ValueError
================================================================= 2 failed, 9 passed in 0.22 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FF.                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:124: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002DDEB361518>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return
    
        elif self.left:
            # self.left.val.name == name:
            self.left.find_people_in_hierarchy(name)
            if self.left.find_people_in_hierarchy(name):
                return self.left.find_people_in_hierarchy(name)
            else:
>               raise ValueError("Value not found")
E               ValueError: Value not found

a06.py:128: ValueError
================================================================= 2 failed, 9 passed in 0.14 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['HoD 2', 'EE 1', 'EE 2']

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 3 failed, 8 passed in 0.14 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FF.                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:124: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002B739E30668>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return
    
        elif self.left:
            # self.left.val.name == name:
            self.left.find_people_in_hierarchy(name)
            if self.left.find_people_in_hierarchy(name):
                return self.left.find_people_in_hierarchy(name)
            else:
>               raise ValueError("Value not found")
E               ValueError: Value not found

a06.py:128: ValueError
================================================================= 2 failed, 9 passed in 0.18 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FF.                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:126: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
a06.py:126: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001BD875E3828>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
                self.left.find_people_in_hierarchy(name)
                if self.left.find_people_in_hierarchy(name):
                    return self.left.find_people_in_hierarchy(name)
            # else:
            #     raise ValueError("Value not found")
    
            elif self.right:
    
                self.right.find_people_in_hierarchy(name)
                if self.right.find_people_in_hierarchy(name):
                    return self.right.find_people_in_hierarchy(name)
    
            else:
>               raise ValueError("?")
E               ValueError: ?

a06.py:139: ValueError
================================================================= 2 failed, 9 passed in 0.17 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FF.                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:126: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
a06.py:126: in find_people_in_hierarchy
    self.left.find_people_in_hierarchy(name)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001AB2E0C14E0>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
                self.left.find_people_in_hierarchy(name)
                if self.left.find_people_in_hierarchy(name):
                    return self.dfs_apply(c.process)
                    # return self.left.find_people_in_hierarchy(name)
            # else:
            #     raise ValueError("Value not found")
    
            elif self.right:
    
                self.right.find_people_in_hierarchy(name)
                if self.right.find_people_in_hierarchy(name):
                    # return self.right.find_people_in_hierarchy(name)
                    return self.dfs_apply(c.process)
    
            else:
>               raise ValueError("?")
E               ValueError: ?

a06.py:141: ValueError
================================================================= 2 failed, 9 passed in 0.17 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000016BE21505F8>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               self.left.val.find_people_in_hierarchy(name)
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:126: AttributeError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000016BE20D1FD0>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               self.left.val.find_people_in_hierarchy(name)
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:126: AttributeError
================================================================= 3 failed, 8 passed in 0.17 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert True == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000028B69EA14E0>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return True
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:126: AttributeError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000028B69ED3668>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return True
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:126: AttributeError
================================================================= 3 failed, 8 passed in 0.15 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert <bound method Collector.get_list of <a06.Collector object at 0x000001C6C36D0898>> == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001C6C37114E0>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            return c.get_list
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:127: AttributeError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001C6C37436A0>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            return c.get_list
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:127: AttributeError
================================================================= 3 failed, 8 passed in 0.15 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
[Director,HoD 1,CS 1,CS 2,HoD 2,EE 1,EE 2]
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x00000128E17A1630>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            print(c)
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:137: AttributeError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x00000128E175EE10>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            print(c)
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:137: AttributeError
================================================================= 3 failed, 8 passed in 0.15 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert None == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
[Director,HoD 1,CS 1,CS 2,HoD 2,EE 1,EE 2]
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001D3F94A25F8>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            return (print(c))
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:137: AttributeError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001D3F945FDA0>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            return (print(c))
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:137: AttributeError
================================================================= 3 failed, 8 passed in 0.15 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert '[Director,HoD 1,CS 1,CS 2,HoD 2,EE 1,EE 2]' == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001C0451324E0>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            # return (print(c))'
            return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:139: AttributeError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001C0450EDDA0>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            # return (print(c))'
            return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:139: AttributeError
================================================================= 3 failed, 8 passed in 0.15 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert '[Director ,HoD 1 ,CS 1 ,CS 2 ,HoD 2 ,EE 1 ,EE 2 ]' == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001B521A314A8>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            # return (print(c))'
            return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:139: AttributeError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001B5219EEFD0>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            # return (print(c))'
            return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:139: AttributeError
================================================================= 3 failed, 8 passed in 0.15 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       assert "['Director' ,'HoD 1' ,'CS 1' ,'CS 2' ,'HoD 2' ,'EE 1' ,'EE 2' ]" == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000018F84110668>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            # return (print(c))'
            return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:139: AttributeError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000018F840CFDA0>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            # return (print(c))'
            return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:139: AttributeError
================================================================= 3 failed, 8 passed in 0.15 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       assert "['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2', ]" == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000020A334C1588>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            # return (print(c))'
            return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:139: AttributeError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000020A33481CF8>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            # return (print(c))'
            return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:139: AttributeError
================================================================= 3 failed, 8 passed in 0.15 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       assert "['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']" == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000015E890014E0>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            # return (print(c))'
            return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:139: AttributeError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000015E88FBDF28>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            # return (print(c))'
            return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:139: AttributeError
================================================================= 3 failed, 8 passed in 0.15 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FFF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('Director')
>       assert l == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
E       assert "['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']" == ['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', ...]

test_student.py:119: AssertionError
------------------------------------------------------------------------ Captured stdout call -------------------------------------------------------------------------
['Director', 'HoD 1', 'CS 1', 'CS 2', 'HoD 2', 'EE 1', 'EE 2']
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x00000157B1EA24A8>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            # return (print(c))'
            return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:139: AttributeError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x00000157B1ED4438>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            # return True
            # return (print(c))'
            return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:139: AttributeError
================================================================= 3 failed, 8 passed in 0.15 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py .........FF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000017401C128D0>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return c.get_list()
            # return True
            # return (print(c))'
            # return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:139: AttributeError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
>           t_d.find_people_in_hierarchy('Accountant')

test_student.py:131: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000017401C4F668>, name = 'Accountant'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return c.get_list()
            # return True
            # return (print(c))'
            # return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
>               if self.left.val.find_people_in_hierarchy(name):
E               AttributeError: 'Person' object has no attribute 'find_people_in_hierarchy'

a06.py:139: AttributeError
================================================================= 2 failed, 9 passed in 0.14 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py .........F.                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:139: in find_people_in_hierarchy
    if self.left.find_people_in_hierarchy(name):
a06.py:139: in find_people_in_hierarchy
    if self.left.find_people_in_hierarchy(name):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000018DC086E908>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return c.get_list()
            # return True
            # return (print(c))'
            # return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
                if self.left.find_people_in_hierarchy(name):
                # if self.left.find_val(name):
                    return self.left.val.dfs_apply(c.process)
                    # return self.left.find_people_in_hierarchy(name)
            # else:
            #     raise ValueError("Value not found")
    
            elif self.right:
    
                # self.right.find_people_in_hierarchy(name)
                if self.right.find_people_in_hierarchy(name):
                    # if self.left.find_val(name):
                    return self.right.val.dfs_apply(c.process)
    
    
    
>           raise ValueError("?")
E           ValueError: ?

a06.py:155: ValueError
================================================================= 1 failed, 10 passed in 0.14 seconds =================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py .........FF                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
        l = t_d.find_people_in_hierarchy('HoD 2')
>       assert l == ['HoD 2', 'EE 1', 'EE 2']
E       AssertionError: assert [] == ['HoD 2', 'EE 1', 'EE 2']
E         Right contains more items, first extra item: 'HoD 2'
E         Use -v to get the full diff

test_student.py:125: AssertionError
_________________________________________________________________________ test_s_hierarchy_3 __________________________________________________________________________

    def test_s_hierarchy_3():
        t_d = get_hier()
        try:
            t_d.find_people_in_hierarchy('Accountant')
>           raise AssertionError("Expecting a ValueError when node is not found.")
E           AssertionError: Expecting a ValueError when node is not found.

test_student.py:132: AssertionError
================================================================= 2 failed, 9 passed in 0.13 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py .........F.                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:139: in find_people_in_hierarchy
    if self.left.find_people_in_hierarchy(name):
a06.py:139: in find_people_in_hierarchy
    if self.left.find_people_in_hierarchy(name):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001C6524CE7B8>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return c.get_list()
            # return True
            # return (print(c))'
            # return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
                if self.left.find_people_in_hierarchy(name):
                # if self.left.find_val(name):
                    return self.left.val.dfs_apply(c.process)
                    # return self.left.find_people_in_hierarchy(name)
            # else:
            #     raise ValueError("Value not found")
    
            elif self.right:
    
                # self.right.find_people_in_hierarchy(name)
                if self.right.find_people_in_hierarchy(name):
                    # if self.left.find_val(name):
                    return self.right.val.dfs_apply(c.process)
    
    
    
>           raise ValueError("?")
E           ValueError: ?

a06.py:155: ValueError
================================================================= 1 failed, 10 passed in 0.14 seconds =================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py .........F.                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:139: in find_people_in_hierarchy
    if self.left.find_people_in_hierarchy(name):
a06.py:139: in find_people_in_hierarchy
    if self.left.find_people_in_hierarchy(name):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001C719D7E828>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return c.get_list()
            # return True
            # return (print(c))'
            # return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
                if self.left.find_people_in_hierarchy(name):
                # if self.left.find_val(name):
                    return self.left.val.dfs_apply(c.process)
                    # return self.left.find_people_in_hierarchy(name)
            # else:
            #     raise ValueError("Value not found")
    
            elif self.right:
    
                # self.right.find_people_in_hierarchy(name)
                if self.right.find_people_in_hierarchy(name):
                    # if self.left.find_val(name):
                    return self.right.val.dfs_apply(c.process)
    
    
    
>       raise ValueError("?")
E       ValueError: ?

a06.py:155: ValueError
================================================================= 1 failed, 10 passed in 0.14 seconds =================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py .........F.                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:139: in find_people_in_hierarchy
    if self.left.find_people_in_hierarchy(name):
a06.py:139: in find_people_in_hierarchy
    if self.left.find_people_in_hierarchy(name):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x00000161B546F898>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return c.get_list()
            # return True
            # return (print(c))'
            # return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
                if self.left.find_people_in_hierarchy(name):
                # if self.left.find_val(name):
                    return self.left.val.dfs_apply(c.process)
                    # return self.left.find_people_in_hierarchy(name)
            # else:
            #     raise ValueError("Value not found")
    
            elif self.right:
    
                # self.right.find_people_in_hierarchy(name)
                if self.right.find_people_in_hierarchy(name):
                    # if self.left.find_val(name):
                    return self.right.val.dfs_apply(c.process)
    
    
    
>       raise ValueError("value not found")
E       ValueError: value not found

a06.py:155: ValueError
================================================================= 1 failed, 10 passed in 0.15 seconds =================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py .........F.                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
a06.py:139: in find_people_in_hierarchy
    if self.left.find_people_in_hierarchy(name):
a06.py:139: in find_people_in_hierarchy
    if self.left.find_people_in_hierarchy(name):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000002317B58E898>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        c = Collector()
    
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return c.get_list()
            # return True
            # return (print(c))'
            # return str(c)
    
    
        else:
            # self.find_people_in_hierarchy(name):
            if self.left:
                # self.left.val.name == name:
                if self.left.find_people_in_hierarchy(name):
                # if self.left.find_val(name):
                    self.left.val.dfs_apply(c.process)
                    # return self.left.find_people_in_hierarchy(name)
            # else:
            #     raise ValueError("Value not found")
    
            elif self.right:
    
                # self.right.find_people_in_hierarchy(name)
                if self.right.find_people_in_hierarchy(name):
                    # if self.left.find_val(name):
                    self.right.val.dfs_apply(c.process)
    
    
    
>       raise ValueError("value not found")
E       ValueError: value not found

a06.py:155: ValueError
================================================================= 1 failed, 10 passed in 0.14 seconds =================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 0 items / 1 errors

=============================================================================== ERRORS ================================================================================
__________________________________________________________________ ERROR collecting test_student.py ___________________________________________________________________
C:\Users\Owner\Anaconda3\lib\site-packages\_pytest\python.py:499: in _importtestmodule
    mod = self.fspath.pyimport(ensuresyspath=importmode)
C:\Users\Owner\Anaconda3\lib\site-packages\py\_path\local.py:701: in pyimport
    __import__(modname)
<frozen importlib._bootstrap>:983: in _find_and_load
    ???
<frozen importlib._bootstrap>:967: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:668: in _load_unlocked
    ???
<frozen importlib._bootstrap>:638: in _load_backward_compatible
    ???
C:\Users\Owner\Anaconda3\lib\site-packages\_pytest\assertion\rewrite.py:296: in load_module
    six.exec_(co, mod.__dict__)
test_student.py:2: in <module>
    from a06 import TreeNode
E     File "E:\Current Semester\Datastructures\Datastructures Assignments\assignment6\a06.py", line 126
E       if self.val.name == name:
E                               ^
E   IndentationError: unindent does not match any outer indentation level
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
======================================================================= 1 error in 0.27 seconds =======================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ........FF.                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_1 __________________________________________________________________________

    def test_s_hierarchy_1():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('Director')

test_student.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000019D68C50710>, name = 'Director'

    def find_people_in_hierarchy(self, name):
    
        lst = self.left.find_nemo(name)
        rst = self.left.find_nemo(name)
    
        if lst == False and rst == False:
>           raise ValueError("value not found")
E           ValueError: value not found

a06.py:164: ValueError
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x0000019D68C9E630>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
    
        lst = self.left.find_nemo(name)
        rst = self.left.find_nemo(name)
    
        if lst == False and rst == False:
>           raise ValueError("value not found")
E           ValueError: value not found

a06.py:164: ValueError
================================================================= 2 failed, 9 passed in 0.14 seconds ==================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py .........F.                                                                                                                                      [100%]

============================================================================== FAILURES ===============================================================================
_________________________________________________________________________ test_s_hierarchy_2 __________________________________________________________________________

    def test_s_hierarchy_2():
        t_d = get_hier()
>       l = t_d.find_people_in_hierarchy('HoD 2')

test_student.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <a06.TreeNode object at 0x000001E69BCF1908>, name = 'HoD 2'

    def find_people_in_hierarchy(self, name):
        c = Collector()
        if self.val.name == name:
            self.dfs_apply(c.process)
            print(c.get_list())
            return c.get_list()
        lst = self.left.find_nemo(name)
        rst = self.left.find_nemo(name)
    
        if lst == False and rst == False:
>           raise ValueError("value not found")
E           ValueError: value not found

a06.py:168: ValueError
================================================================= 1 failed, 10 passed in 0.14 seconds =================================================================
========================================================================= test session starts =========================================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ...........                                                                                                                                      [100%]

====================================================================== 11 passed in 0.07 seconds ======================================================================
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.3.1, py-1.8.0, pluggy-0.9.0
rootdir: E:\Current Semester\Datastructures\Datastructures Assignments\assignment6, inifile:
plugins: timeout-1.3.3, remotedata-0.3.1, openfiles-0.3.2, doctestplus-0.3.0, arraydiff-0.3
timeout: 3.0s
timeout method: thread
timeout func_only: False
collected 11 items

test_student.py ...........                                                                                      [100%]

============================================== 11 passed in 0.21 seconds ==============================================
